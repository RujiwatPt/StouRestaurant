/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formManagement;

import java.awt.Font;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.print.*;
import static java.awt.print.Printable.NO_SUCH_PAGE;
import static java.awt.print.Printable.PAGE_EXISTS;
import static java.lang.Integer.parseInt;
import static java.nio.file.Files.lines;
import static java.nio.file.Files.lines;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import stourestaurant.MyConnect;

/**
 *
 * @author Jin
 */
public class BillManagement extends javax.swing.JInternalFrame {
public Double bHeight = 0.0;
    private Connection conn = MyConnect.getConnection();
    private DefaultTableModel modelBill;
    public Bill b = new Bill();
    public String food = "";

    /**
     * Creates new form BillManagement
     */
    public BillManagement() {
        initComponents();
        modelBill = (DefaultTableModel) tbBill.getModel();
        //MemberComboBox
        try {

            String sql2 = "SELECT mem_id FROM tb_member";
            ResultSet rs2 = conn.createStatement().executeQuery(sql2);
            int row2 = 0;
            while (rs2.next()) {
                memberComboBox.addItem(rs2.getString("mem_id"));
                row2++;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        //StaffComboBox
        try {

            String sql3 = "SELECT staff_id FROM tb_staff";
            ResultSet rs3 = conn.createStatement().executeQuery(sql3);
            int row3 = 0;
            while (rs3.next()) {
                staffComboBox.addItem(rs3.getString("staff_id"));
                row3++;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        //OrderComboBox
        try {

            String sql4 = "SELECT order_id FROM tb_order";
            ResultSet rs4 = conn.createStatement().executeQuery(sql4);
            int row4 = 0;
            while (rs4.next()) {
                orderComboBox.addItem(rs4.getString("order_id"));
                row4++;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnUpdate = new javax.swing.JButton();
        lbMember = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbBill = new javax.swing.JTable();
        searchPanelBill = new javax.swing.JPanel();
        txtSearchBill = new javax.swing.JTextField();
        lbStaff = new javax.swing.JLabel();
        lbBillID = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        lbOrder = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        txtBillID = new javax.swing.JTextField();
        headerBill = new javax.swing.JLabel();
        lbStatus = new javax.swing.JLabel();
        statusComboBox = new javax.swing.JComboBox<>();
        memberComboBox = new javax.swing.JComboBox<>();
        staffComboBox = new javax.swing.JComboBox<>();
        orderComboBox = new javax.swing.JComboBox<>();
        btnPrint = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("การจัดการใบเสร็จ");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lbMember.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbMember.setLabelFor(memberComboBox);
        lbMember.setText("รหัสสมาชิก :");

        tbBill.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "เลขที่ใบเสร็จ", "รหัสสมาชิก", "รหัสพนักงาน", "รหัสคำสั่งซื้อ", "สถานะคำสั่งซื้อ"
            }
        ));
        tbBill.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbBillMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbBill);

        searchPanelBill.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        txtSearchBill.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearchBill.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchBillKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout searchPanelBillLayout = new javax.swing.GroupLayout(searchPanelBill);
        searchPanelBill.setLayout(searchPanelBillLayout);
        searchPanelBillLayout.setHorizontalGroup(
            searchPanelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelBillLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearchBill, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );
        searchPanelBillLayout.setVerticalGroup(
            searchPanelBillLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelBillLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearchBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(202, Short.MAX_VALUE))
        );

        lbStaff.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbStaff.setLabelFor(staffComboBox);
        lbStaff.setText("รหัสพนักงาน :");

        lbBillID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbBillID.setLabelFor(txtBillID);
        lbBillID.setText("เลขที่ใบเสร็จ : ");

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        lbOrder.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbOrder.setLabelFor(orderComboBox);
        lbOrder.setText("รหัสคำสั่งซื้อ :");

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtBillID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        headerBill.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        headerBill.setText("การจัดการใบเสร็จ");

        lbStatus.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbStatus.setLabelFor(statusComboBox);
        lbStatus.setText("สถานะคำสั่งซื้อ :");

        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "รอการชำระเงิน", "ชำระเงินเสร็จสิ้น" }));
        statusComboBox.setToolTipText("");

        btnPrint.setText("Print");
        btnPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lbStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbMember, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbStaff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbOrder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lbBillID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(staffComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(memberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnInsert)
                        .addGap(18, 18, 18)
                        .addComponent(btnUpdate)
                        .addGap(18, 18, 18)
                        .addComponent(btnDelete)
                        .addGap(18, 18, 18)
                        .addComponent(btnPrint))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(statusComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(orderComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 113, Short.MAX_VALUE))
                    .addComponent(txtBillID, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(searchPanelBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(headerBill)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(searchPanelBill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(headerBill)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbBillID)
                            .addComponent(txtBillID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lbMember)
                            .addComponent(memberComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbStaff)
                            .addComponent(staffComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbOrder))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbStatus)
                            .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInsert)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete)
                            .addComponent(btnPrint))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtSearchBillKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchBillKeyReleased
        // TODO add your handling code here:
        String searchText = txtSearchBill.getText();
        try {
            showData();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtSearchBillKeyReleased

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        showData();
    }//GEN-LAST:event_formInternalFrameOpened

    private void tbBillMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbBillMouseClicked
        // TODO add your handling code here:
        int index = tbBill.getSelectedRow();
        txtBillID.setText(tbBill.getValueAt(index, 0).toString());
        memberComboBox.setSelectedItem(tbBill.getValueAt(index, 1).toString());
        staffComboBox.setSelectedItem(tbBill.getValueAt(index, 2).toString());
        orderComboBox.setSelectedItem(tbBill.getValueAt(index, 3).toString());
        statusComboBox.setSelectedItem(tbBill.getValueAt(index, 4).toString());
    }//GEN-LAST:event_tbBillMouseClicked

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "INSERT INTO tb_bill (bill_id,mem_id,staff_id,order_id,bill_status) VALUES (?,?,?,?,?)";
            PreparedStatement pre = conn.prepareStatement(sql);
            pre.setString(1, txtBillID.getText());
            pre.setString(2, memberComboBox.getSelectedItem().toString());
            pre.setString(3, staffComboBox.getSelectedItem().toString());
            pre.setString(4, orderComboBox.getSelectedItem().toString());
            pre.setString(5, statusComboBox.getSelectedItem().toString());
            if (pre.executeUpdate() != -1) {
                JOptionPane.showMessageDialog(this, "บันทึกรายการแล้ว", "ผลการบันทึกรายการ", JOptionPane.INFORMATION_MESSAGE);
                txtBillID.setText("");
                showData();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int index = tbBill.getSelectedRow();
        if (index != -1) {
            String pk = txtBillID.getText().trim();
            String sql = "UPDATE tb_bill SET "
                    + "mem_id = ?, "
                    + "staff_id = ?, "
                    + "order_id = ?, "
                    + "bill_status = ? "
                    + "WHERE bill_id = ?";

            try {
                PreparedStatement pre = conn.prepareStatement(sql);
                pre.setString(1, memberComboBox.getSelectedItem().toString());
                pre.setString(2, staffComboBox.getSelectedItem().toString());
                pre.setString(3, orderComboBox.getSelectedItem().toString());
                pre.setString(4, statusComboBox.getSelectedItem().toString());
                pre.setString(5, pk);
                if (pre.executeUpdate() != -1) {
                }
                JOptionPane.showMessageDialog(this, "แก้ไขรายการแล้ว", "ผลการบันทึกรายการ",
                        JOptionPane.INFORMATION_MESSAGE);
                txtBillID.setText("");
                showData();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int index = tbBill.getSelectedRow();
        if (index != -1) {

            String pk = txtBillID.getText().trim();
            String sql = "Delete from tb_bill where bill_id =?";

            try {
                PreparedStatement pre = conn.prepareStatement(sql);
                pre.setString(1, pk);
                if (pre.executeUpdate() != -1) {
                    JOptionPane.showMessageDialog(this, "ลบรายการแล้ว", "ผลการลบรายการ",
                            JOptionPane.INFORMATION_MESSAGE);
                    txtBillID.setText("");
                    showData();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintActionPerformed
        // TODO add your handling code here:

        b.setBillID(txtBillID.getText());
        b.setMemberID(memberComboBox.getSelectedItem().toString());
        b.setStaffID(staffComboBox.getSelectedItem().toString());
        b.setOrderID(orderComboBox.getSelectedItem().toString());

        try {
            String order = orderComboBox.getSelectedItem().toString();
            String sql = " SELECT * FROM tb_order "
                    + " where "
                    + " order_id LIKE ('%" + order + "%' )";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            while (rs.next()) {
                b.setTableID(rs.getString("table_id"));
                String food2 = rs.getString("food_id");
                this.food = food2;
                b.setFoodID(food);
                b.setAmount(rs.getInt("amount"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }

        try {
            String sql = " SELECT * FROM tb_food "
                    + " where "
                    + " food_id LIKE ('%" + food + "%' )";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            while (rs.next()) {
                b.setPrice(rs.getInt("food_cost"));
                b.setFoodName(rs.getString("food_name"));
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        this.b = b;
        PreBillPrint pb = new PreBillPrint();
        pb.setVisible(true);
        this.getDesktopPane().add(pb);
        pb.toFront();


    }//GEN-LAST:event_btnPrintActionPerformed

    public void showData() {
        try {
//clear data
            int totalRow = tbBill.getRowCount() - 1;
            while (totalRow > - 1) {
                modelBill.removeRow(totalRow);
                totalRow--;
            }
// add record
            String search = txtSearchBill.getText();
            String sql = " SELECT * FROM tb_bill "
                    + " where "
                    + " bill_id LIKE ('%" + search + "%' )"
                    + " OR mem_id LIKE ('%" + search + "%')"
                    + " OR staff_id LIKE ('%" + search + "%')"
                    + " OR order_id LIKE ('%" + search + "%')"
                    + " OR bill_status LIKE ('%" + search + "%')";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            int row = 0;
            while (rs.next()) {
                modelBill.addRow(new Object[0]);
                modelBill.setValueAt(rs.getString("bill_id"), row, 0);
                modelBill.setValueAt(rs.getString("mem_id"), row, 1);
                modelBill.setValueAt(rs.getString("staff_id"), row, 2);
                modelBill.setValueAt(rs.getString("order_id"), row, 3);
                modelBill.setValueAt(rs.getString("bill_status"), row, 4);
                row++;
            }
            tbBill.setModel(modelBill);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnPrint;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel headerBill;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbBillID;
    private javax.swing.JLabel lbMember;
    private javax.swing.JLabel lbOrder;
    private javax.swing.JLabel lbStaff;
    private javax.swing.JLabel lbStatus;
    private javax.swing.JComboBox<String> memberComboBox;
    private javax.swing.JComboBox<String> orderComboBox;
    private javax.swing.JPanel searchPanelBill;
    private javax.swing.JComboBox<String> staffComboBox;
    private javax.swing.JComboBox<String> statusComboBox;
    private javax.swing.JTable tbBill;
    private javax.swing.JTextField txtBillID;
    private javax.swing.JTextField txtSearchBill;
    // End of variables declaration//GEN-END:variables

    public class PreBillPrint extends javax.swing.JInternalFrame {

        /**
         * Creates new form PreBillPrint
         */
        public PreBillPrint() {
            initComponents2();
            txtBillID.setText(b.getBillID());
            txtMemberID.setText(b.getMemberID());
            txtStaffID.setText(b.getStaffID());
            txtOrderID.setText(b.getOrderID());
            txtTableID.setText(b.getTableID());
            txtFoodID.setText(b.getFoodName());
            txtAmount.setText(String.valueOf(b.getAmount()));
            int d = b.getPrice();
            System.out.print(d);
            txtTotal.setText(String.valueOf(b.getAmount() * b.getPrice()));
        }

        /**
         * This method is called from within the constructor to initialize the
         * form. WARNING: Do NOT modify this code. The content of this method is
         * always regenerated by the Form Editor.
         */
        @SuppressWarnings("unchecked")
        // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
        private void initComponents2() {

            headerBill = new javax.swing.JLabel();
            lbBillID = new javax.swing.JLabel();
            txtBillID = new javax.swing.JTextField();
            lbMember = new javax.swing.JLabel();
            lbStaff = new javax.swing.JLabel();
            lbOrder = new javax.swing.JLabel();
            txtMemberID = new javax.swing.JTextField();
            txtStaffID = new javax.swing.JTextField();
            txtOrderID = new javax.swing.JTextField();
            lbTable = new javax.swing.JLabel();
            txtTableID = new javax.swing.JTextField();
            lbFood = new javax.swing.JLabel();
            lbAmount = new javax.swing.JLabel();
            lbTotal = new javax.swing.JLabel();
            lbReceive = new javax.swing.JLabel();
            lbChange = new javax.swing.JLabel();
            txtFoodID = new javax.swing.JTextField();
            txtAmount = new javax.swing.JTextField();
            txtTotal = new javax.swing.JTextField();
            txtReceive = new javax.swing.JTextField();
            txtChange = new javax.swing.JTextField();
            btnPrint = new javax.swing.JButton();

            setClosable(true);
            setIconifiable(true);
            setMaximizable(true);
            setResizable(true);
            setTitle("ระบบพิมพ์ใบเสร็จ");

            headerBill.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
            headerBill.setText("ระบบพิมพ์ใบเสร็จ");

            lbBillID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbBillID.setText("เลขที่ใบเสร็จ : ");

            txtBillID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

            lbMember.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbMember.setLabelFor(txtMemberID);
            lbMember.setText("รหัสสมาชิก :");

            lbStaff.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbStaff.setLabelFor(txtStaffID);
            lbStaff.setText("รหัสพนักงาน :");

            lbOrder.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbOrder.setLabelFor(txtTableID);
            lbOrder.setText("รหัสคำสั่งซื้อ :");

            txtMemberID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

            txtStaffID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

            txtOrderID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

            lbTable.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbTable.setLabelFor(txtTableID);
            lbTable.setText("รหัสโต๊ะ :");

            txtTableID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

            lbFood.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbFood.setLabelFor(txtFoodID);
            lbFood.setText("รหัสอาหาร :");

            lbAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbAmount.setLabelFor(txtAmount);
            lbAmount.setText("ปริมาณ :");

            lbTotal.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbTotal.setLabelFor(txtTotal);
            lbTotal.setText("ราคาสุทธิ");

            lbReceive.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbReceive.setLabelFor(lbReceive);
            lbReceive.setText("รับมา :");

            lbChange.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
            lbChange.setLabelFor(txtChange);
            lbChange.setText("เงินทอน :");

            txtFoodID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

            txtAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

            txtTotal.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

            txtReceive.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
            txtReceive.addKeyListener(new java.awt.event.KeyAdapter() {
                public void keyReleased(java.awt.event.KeyEvent evt) {
                    txtReceiveKeyReleased(evt);
                }
            });
            txtChange.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
            txtChange.setEditable(false);
            btnPrint.setText("พิมพ์");
            btnPrint.addActionListener(new java.awt.event.ActionListener() {
                public void actionPerformed(java.awt.event.ActionEvent evt) {
                    btnPrintActionPerformed(evt);
                }
            });

            javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
            getContentPane().setLayout(layout);
            layout.setHorizontalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addContainerGap(311, Short.MAX_VALUE)
                                    .addComponent(headerBill)
                                    .addGap(297, 297, 297))
                            .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(layout.createSequentialGroup()
                                                    .addGap(29, 29, 29)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                            .addComponent(lbMember, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lbStaff, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lbOrder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lbBillID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(lbTable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lbFood, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lbAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lbTotal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lbReceive, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                            .addComponent(lbChange, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                            .addComponent(txtBillID, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtTableID, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtFoodID, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtReceive, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                            .addComponent(txtChange, javax.swing.GroupLayout.PREFERRED_SIZE, 365, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                            .addGroup(layout.createSequentialGroup()
                                                    .addGap(398, 398, 398)
                                                    .addComponent(btnPrint)))
                                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            );
            layout.setVerticalGroup(
                    layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                    .addGap(24, 24, 24)
                                    .addComponent(headerBill)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbBillID)
                                            .addComponent(txtBillID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbMember)
                                            .addComponent(txtMemberID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbStaff)
                                            .addComponent(txtStaffID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbOrder)
                                            .addComponent(txtOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbTable)
                                            .addComponent(txtTableID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbFood)
                                            .addComponent(txtFoodID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbAmount)
                                            .addComponent(txtAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbTotal)
                                            .addComponent(txtTotal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbReceive)
                                            .addComponent(txtReceive, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lbChange)
                                            .addComponent(txtChange, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGap(40, 40, 40)
                                    .addComponent(btnPrint)
                                    .addContainerGap(71, Short.MAX_VALUE))
            );

            pack();
        }// </editor-fold>                        

        private void btnPrintActionPerformed(java.awt.event.ActionEvent evt) {
            // TODO add your handling code here: 
            PrinterJob pj = PrinterJob.getPrinterJob();
            pj.setPrintable(new BillPrintable(), getPageFormat(pj));
            try {
                pj.print();

            } catch (PrinterException ex) {
                ex.printStackTrace();
            }
        }

        private void txtReceiveKeyReleased(java.awt.event.KeyEvent evt) {
            // TODO add your handling code here:
            int receive = parseInt(txtReceive.getText());
            int total = parseInt(txtTotal.getText());
            int change = receive - total;
            txtChange.setText(String.valueOf(change));
            b.setReceive(receive);
            b.setTotal(total);
            b.setChange(change);
        }

        // Variables declaration - do not modify                     
        private javax.swing.JButton btnPrint;
        private javax.swing.JLabel headerBill;
        private javax.swing.JLabel lbAmount;
        private javax.swing.JLabel lbBillID;
        private javax.swing.JLabel lbChange;
        private javax.swing.JLabel lbFood;
        private javax.swing.JLabel lbMember;
        private javax.swing.JLabel lbOrder;
        private javax.swing.JLabel lbReceive;
        private javax.swing.JLabel lbStaff;
        private javax.swing.JLabel lbTable;
        private javax.swing.JLabel lbTotal;
        private javax.swing.JTextField txtAmount;
        private javax.swing.JTextField txtBillID;
        private javax.swing.JTextField txtChange;
        private javax.swing.JTextField txtFoodID;
        private javax.swing.JTextField txtMemberID;
        private javax.swing.JTextField txtOrderID;
        private javax.swing.JTextField txtReceive;
        private javax.swing.JTextField txtStaffID;
        private javax.swing.JTextField txtTableID;
        private javax.swing.JTextField txtTotal;
        // End of variables declaration                   

        public class BillPrintable implements Printable {

           

            public int print(Graphics graphics, PageFormat pageFormat, int pageIndex)
                    throws PrinterException {

                int result = NO_SUCH_PAGE;
                if (pageIndex == 0) {

                    Graphics2D g2d = (Graphics2D) graphics;
                    double width = pageFormat.getImageableWidth();
                    g2d.translate((int) pageFormat.getImageableX(), (int) pageFormat.getImageableY());

                    //  FontMetrics metrics=g2d.getFontMetrics(new Font("Arial",Font.BOLD,7));
                    try {
                        int y = 20;
                        int yShift = 10;
                        int headerRectHeight = 15;
                        // int headerRectHeighta=40;

                        g2d.setFont(new Font("Monospaced", Font.PLAIN, 9));
                        g2d.drawString("-------------------------------------", 12, y);
                        y += yShift;
                        g2d.drawString("           StouRestaurant      ", 12, y);
                        y += yShift;
                        g2d.drawString("-------------------------------------", 12, y);
                        y += yShift;
                        g2d.drawString(" Bill ID:                 " + b.getBillID(), 10, y);
                        y += yShift;
                        g2d.drawString("-------------------------------------", 12, y);
                        y += yShift;
                         g2d.drawString(" Table ID:                  " + b.getTableID(), 10, y);
                        y += yShift;
                        g2d.drawString("-------------------------------------", 12, y);
                        y += yShift;
                        g2d.drawString(" Member ID:                 " + b.getMemberID() + "  ", 10, y);
                        y += yShift;
                        g2d.drawString("-------------------------------------", 12, y);
                        y += yShift;
                        g2d.drawString(" Staff ID:                  " + b.getStaffID() + "  ", 10, y);
                        y += yShift;
                        g2d.drawString("-------------------------------------", 12, y);
                        y += yShift;
                        g2d.drawString(" Item-Name                Price    ", 10, y);
                        y += yShift;
                        g2d.drawString("-------------------------------------", 10, y);
                        y += yShift;

                        g2d.drawString(" " + b.getFoodName() + "  *  " + b.getAmount() +"                 " + b.getPrice(), 10, y);
                        y += headerRectHeight;
//                        g2d.drawString("           "              " +   , 10, y);
//                        y += yShift;

                        g2d.drawString(" Total Price:               " + b.getTotal() + "  ", 10, y);
                        y += yShift;
                        g2d.drawString("-------------------------------------", 10, y);
                        y += yShift;
                        g2d.drawString(" Receive:                   " + b.getReceive() + " ", 10, y);
                        y += yShift;
                        g2d.drawString("-------------------------------------", 10, y);
                        y += yShift;
                        g2d.drawString(" Change:                    " + b.getChange() + "   ", 10, y);
                        y += yShift;

                        g2d.drawString("*************************************", 10, y);
                        y += yShift;
                        g2d.drawString("     THANK YOU, PLEASE COME AGAIN      ", 10, y);
                        y += yShift;
                        g2d.drawString("*************************************", 10, y);
                        y += yShift;

                    } catch (Exception e) {
                        e.printStackTrace();
                    }

                    result = PAGE_EXISTS;
                }
                return result;
            }
        }

        public PageFormat getPageFormat(PrinterJob pj) {

            PageFormat pf = pj.defaultPage();
            Paper paper = pf.getPaper();

            double bodyHeight = bHeight;
            double headerHeight = 5.0;
            double footerHeight = 5.0;
            double width = cm_to_pp(8);
            double height = cm_to_pp(headerHeight + bodyHeight + footerHeight);
            paper.setSize(width, height);
            paper.setImageableArea(0, 10, width, height - cm_to_pp(1));

            pf.setOrientation(PageFormat.PORTRAIT);
            pf.setPaper(paper);

            return pf;
        }

        protected static double cm_to_pp(double cm) {
            return toPPI(cm * 0.393600787);
        }

        protected static double toPPI(double inch) {
            return inch * 72d;
        }
    }

}
