/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package formManagement;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Connection;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import stourestaurant.MyConnect;

/**
 *
 * @author Jin
 */
public class OrderManagement extends javax.swing.JInternalFrame {

    private Connection conn = MyConnect.getConnection();
    private DefaultTableModel modelOrder;

    /**
     * Creates new form OrderManagement
     */
    public OrderManagement() {
        initComponents();
        modelOrder = (DefaultTableModel) tbOrder.getModel();
        
        //tableComboBox
        try {

            String sql2 = "SELECT table_id FROM tb_table";
            ResultSet rs2 = conn.createStatement().executeQuery(sql2);
            int row2 = 0;
            while (rs2.next()) {
                tableComboBox.addItem(rs2.getString("table_id"));
                row2++;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        
        //foodComboBox
        try {

            String sql2 = "SELECT food_id FROM tb_food";
            ResultSet rs2 = conn.createStatement().executeQuery(sql2);
            int row2 = 0;
            while (rs2.next()) {
                foodComboBox.addItem(rs2.getString("food_id"));
                row2++;
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lbTableID = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbOrder = new javax.swing.JTable();
        lbFoodID = new javax.swing.JLabel();
        searchPaneOrder = new javax.swing.JPanel();
        txtSearchOrder = new javax.swing.JTextField();
        lbOrderID = new javax.swing.JLabel();
        btnInsert = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        txtOrderID = new javax.swing.JTextField();
        headerOrder = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        lbFoodAmount = new javax.swing.JLabel();
        txtFoodAmount = new javax.swing.JTextField();
        tableComboBox = new javax.swing.JComboBox<>();
        foodComboBox = new javax.swing.JComboBox<>();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("ระบบจัดการคำสั่งซื้อ");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        lbTableID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbTableID.setLabelFor(tableComboBox);
        lbTableID.setText("รหัสโต๊ะ:");

        tbOrder.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "รหัสคำสั่งซื้อ", "รหัสโต๊ะ", "รหัสอาหาร", "จำนวน"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tbOrder.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbOrderMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tbOrder);

        lbFoodID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbFoodID.setLabelFor(foodComboBox);
        lbFoodID.setText("รหัสอาหาร :");

        searchPaneOrder.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 14))); // NOI18N

        txtSearchOrder.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        txtSearchOrder.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchOrderKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout searchPaneOrderLayout = new javax.swing.GroupLayout(searchPaneOrder);
        searchPaneOrder.setLayout(searchPaneOrderLayout);
        searchPaneOrderLayout.setHorizontalGroup(
            searchPaneOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPaneOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearchOrder, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                .addContainerGap())
        );
        searchPaneOrderLayout.setVerticalGroup(
            searchPaneOrderLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPaneOrderLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtSearchOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(202, Short.MAX_VALUE))
        );

        lbOrderID.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbOrderID.setLabelFor(txtOrderID);
        lbOrderID.setText("รหัสคำสั่งซื้อ :");

        btnInsert.setText("Insert");
        btnInsert.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInsertActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        txtOrderID.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        headerOrder.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        headerOrder.setText("การจัดการคำสั่งซื้อ");

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        lbFoodAmount.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        lbFoodAmount.setLabelFor(txtFoodAmount);
        lbFoodAmount.setText("จำนวน :");

        txtFoodAmount.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 61, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(headerOrder)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(lbFoodID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbTableID, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(lbOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(tableComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(foodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lbFoodAmount, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGap(18, 18, 18)
                                        .addComponent(txtFoodAmount, javax.swing.GroupLayout.PREFERRED_SIZE, 355, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(36, 36, 36))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(btnInsert)
                                .addGap(18, 18, 18)
                                .addComponent(btnUpdate)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addGap(118, 118, 118)))
                        .addComponent(searchPaneOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(27, 27, 27))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addComponent(searchPaneOrder, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 10, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(headerOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtOrderID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(lbOrderID)
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbTableID)
                                    .addComponent(tableComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lbFoodID)
                                    .addComponent(foodComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(txtFoodAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(lbFoodAmount))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnInsert)
                            .addComponent(btnUpdate)
                            .addComponent(btnDelete))
                        .addGap(31, 31, 31)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbOrderMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbOrderMouseClicked
        // TODO add your handling code here:
        int index = tbOrder.getSelectedRow();
        txtOrderID.setText(tbOrder.getValueAt(index, 0).toString());
        tableComboBox.setSelectedItem(tbOrder.getValueAt(index, 1).toString());
        foodComboBox.setSelectedItem(tbOrder.getValueAt(index, 2).toString());
        txtFoodAmount.setText(tbOrder.getValueAt(index, 3).toString());
    }//GEN-LAST:event_tbOrderMouseClicked

    private void txtSearchOrderKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchOrderKeyReleased
        // TODO add your handling code here:
        String searchText = txtSearchOrder.getText();
        try {
            showData();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_txtSearchOrderKeyReleased

    private void btnInsertActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInsertActionPerformed
        // TODO add your handling code here:
        try {
            String sql = "INSERT INTO tb_order (order_id,table_id,food_id,amount) VALUES (?,?,?,?)";
            PreparedStatement pre = conn.prepareStatement(sql);
            pre.setString(1, txtOrderID.getText());
            pre.setString(2, tableComboBox.getSelectedItem().toString());
            pre.setString(3, foodComboBox.getSelectedItem().toString());
            pre.setString(4, txtFoodAmount.getText());
            if (pre.executeUpdate() != -1) {
                JOptionPane.showMessageDialog(this, "บันทึกรายการแล้ว", "ผลการบันทึกรายการ", JOptionPane.INFORMATION_MESSAGE);
                txtOrderID.setText("");
                txtFoodAmount.setText("");
                showData();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnInsertActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int index = tbOrder.getSelectedRow();
        if (index != -1) {

            String pk = txtOrderID.getText().trim();
            String sql = "Delete from tb_order where order_id =?";

            try {
                PreparedStatement pre = conn.prepareStatement(sql);
                pre.setString(1, pk);
                if (pre.executeUpdate() != -1) {
                    JOptionPane.showMessageDialog(this, "ลบรายการแล้ว", "ผลการลบรายการ",
                            JOptionPane.INFORMATION_MESSAGE);
                    txtOrderID.setText("");
                    txtFoodAmount.setText("");
                    showData();
                }
            } catch (SQLException e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int index = tbOrder.getSelectedRow();
        if (index != -1) {
            String pk = txtOrderID.getText().trim();
            String sql = "UPDATE tb_order SET "
                    + "table_id = ?, "
                    + "food_id = ?, "
                    + "amount = ? "
                    + "WHERE order_id = ?";

            try {
                PreparedStatement pre = conn.prepareStatement(sql);
                pre.setString(1, tableComboBox.getSelectedItem().toString());
                pre.setString(2, foodComboBox.getSelectedItem().toString());
                pre.setString(3, txtFoodAmount.getText());
                pre.setString(4, pk);
                if (pre.executeUpdate() != -1) {
                }
                JOptionPane.showMessageDialog(this, "แก้ไขรายการแล้ว", "ผลการบันทึกรายการ",
                        JOptionPane.INFORMATION_MESSAGE);
                txtOrderID.setText("");
                txtFoodAmount.setText("");
                showData();
            } catch (Exception e) {
                e.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        // TODO add your handling code here:
        showData();
    }//GEN-LAST:event_formInternalFrameOpened

public void showData() {
        try {
//clear data
            int totalRow = tbOrder.getRowCount() - 1;
            while (totalRow > - 1) {
                modelOrder.removeRow(totalRow);
                totalRow--;
            }
// add record
            String search = txtSearchOrder.getText();
            String sql = " SELECT * FROM tb_order "
                    + " where "
                    + " order_id LIKE ('%" + search + "%' )"
                    + " OR table_id LIKE ('%" + search + "%')"
                    + " OR food_id LIKE ('%" + search + "%')"
                    + " OR amount LIKE ('%" + search + "%')";
            ResultSet rs = conn.createStatement().executeQuery(sql);
            int row = 0;
            while (rs.next()) {
                modelOrder.addRow(new Object[0]);
                modelOrder.setValueAt(rs.getString("order_id"), row, 0);
                modelOrder.setValueAt(rs.getString("table_id"), row, 1);
                modelOrder.setValueAt(rs.getString("food_id"), row, 2);
                modelOrder.setValueAt(rs.getString("amount"), row, 3);
                row++;
            }
            tbOrder.setModel(modelOrder);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnInsert;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> foodComboBox;
    private javax.swing.JLabel headerOrder;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lbFoodAmount;
    private javax.swing.JLabel lbFoodID;
    private javax.swing.JLabel lbOrderID;
    private javax.swing.JLabel lbTableID;
    private javax.swing.JPanel searchPaneOrder;
    private javax.swing.JComboBox<String> tableComboBox;
    private javax.swing.JTable tbOrder;
    private javax.swing.JTextField txtFoodAmount;
    private javax.swing.JTextField txtOrderID;
    private javax.swing.JTextField txtSearchOrder;
    // End of variables declaration//GEN-END:variables
}
